const SET_TASKS = 'app/SET_TASKS';
const SET_SCORE_TRUE = 'app/SET_SCORE_TRUE';
const SET_SCORE_FALSE = 'app/SET_SCORE_FALSE';

let initialState = {
    tasks: ['Маша засушила 3 кленовых листика, а дубовых – на 2 листика больше. Сколько всего листиков засушила Маша?',
        'У Пети 4 флажка, а у Вани на 3 флажка больше. Сколько флажков у обоих мальчиков?',
        'Мама испекла 9 пирожков, а булочек – на 4 меньше. Сколько булочек испекла мама?',
        'У Кати 6 матрёшек, а у Даши на 4 матрёшки больше. Сколько матрёшек у Даши?',
        'В большой башне 8 окон, а в маленькой башне на 4 окна меньше. Сколько окон в маленькой башне?',
        'Рыбак поймал 6 ершей, а окуней – на 4 меньше. Сколько окуней поймал рыбак?',
        'Длина красного карандаша 10см, а синий карандаш на 3см длиннее. Какой длины синий карандаш?',
        'Таня вырастила фиалку и кактус. Высота фиалки 7см, а кактус на 3см ниже фиалки. Какой высоты фиалка?',
        'В Московском поезде 9 вагонов, а в Тульском на 3 вагона меньше. Сколько вагонов в обоих поездах?',
        'На арене цирка выступают 7 жонглёров, а клоунов – на 4 меньше. Сколько всего циркачей выступает на арене?',
        'Столяр починил 3 стола, а стульев – на 4 больше. Сколько столов починил столяр?',
        'На крыше беседки висят 4 сосульки, а на крыше дома – на 6 сосулек больше. 3 сосульки растаяли. Сколько всего сосулек осталось висеть на крышах?',
        'Мультфильм в кинотеатре начался в 5 часов, а закончился в 7. Сколько часов шёл мультфильм?',
        'На Новый год в вазу положили 10 мандаринов. 4 мандарина съел папа, 3 мандарина съела мама и еще 3 - бабушка. Сколько мандаринов осталось в вазе?',
        'Катя слепила 5 снежков, а сережа - 7. По 3 снежка они бросили друг в друга. Сколько всего снежков осталось у ребят?',
        'У Саши есть 3 рубля, а пачка мороженого стоит 1 рубль. Сколько пачек мороженого сможет купить Саша?'],
    results: [8, 11, 5, 10, 4, 2, 13, 7, 15, 10, 3, 11, 2, 0, 6, 3],
    scoreFalse: 0,
    scoreTrue: 0,
}

export const appReducer = (state = initialState, action) => {
    switch (action.type) {
        case SET_TASKS:
            return {
                ...state,
                tasks: state.tasks.filter((el, num) => num !== 0),
                results: state.results.filter((el, num) => num !== 0)
            }
        case SET_SCORE_TRUE:
            return {
                ...state,
                scoreTrue: state.scoreTrue + 1
            }
        case SET_SCORE_FALSE:
            return {
                ...state,
                scoreFalse: state.scoreFalse + 1
            }
        default:
            return state
    }
}

const setTasksSplice = () => ({type: SET_TASKS})
const setScoreTrue = () => ({type: SET_SCORE_TRUE})
const setScoreFalse = () => ({type: SET_SCORE_FALSE})

export const tasksAndResultsSplice = () => (dispatch) => {
    dispatch(setTasksSplice())
}
export const incrementScoreTrue = () => (dispatch) => {
    dispatch(setScoreTrue())
}
export const incrementScoreFalse = () => (dispatch) => {
    dispatch(setScoreFalse())
}